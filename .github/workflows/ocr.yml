name: OCR Batch (preprocess + ocrmypdf)

on:
  workflow_dispatch:   # garante o botÃ£o "Run workflow"

jobs:
  ocr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            tesseract-ocr tesseract-ocr-por \
            poppler-utils qpdf ghostscript imagemagick
          python3 -m pip install --upgrade pip
          python3 -m pip install ocrmypdf

      - name: Debug: versions & langs
        run: |
          echo "=== tesseract version ==="
          tesseract --version
          echo "=== installed tesseract langs ==="
          tesseract --list-langs || true
          echo "=== ocrmypdf version ==="
          ocrmypdf --version || true

      - name: Run OCR with preprocessing
        run: |
          mkdir -p tmp preproc output/pdf output/txt output/final
          for f in input/*; do
            [ -f "$f" ] || continue
            base=$(basename "$f")
            name="${base%.*}"
            echo ">>> Processing: $base"

            if [[ "${f,,}" == *.pdf ]]; then
              echo " - PDF detected: split into images"
              pdftoppm -r 300 "$f" "tmp/${name}" -png
              for img in tmp/${name}-*.png; do
                page=$(basename "$img" .png)
                echo "   Preprocessing page: $page"
                convert "$img" -resize 300% -colorspace Gray -contrast-stretch 0 \
                  -blur 1x1 -sharpen 0x1 -deskew 40% \
                  -threshold 50% "preproc/${page}.png"
                ocrmypdf --force-ocr -l por --image-dpi 300 "preproc/${page}.png" "tmp/${page}_ocr.pdf"
                pdftotext "tmp/${page}_ocr.pdf" "output/txt/${page}.txt" || true
                cp "tmp/${page}_ocr.pdf" "output/pdf/${page}.pdf"
              done
            else
              echo " - Image detected: preprocessing"
              convert "$f" -resize 300% -colorspace Gray -contrast-stretch 0 \
                -blur 1x1 -sharpen 0x1 -deskew 40% \
                -threshold 50% "preproc/${name}.png"
              ocrmypdf --force-ocr -l por --image-dpi 300 "preproc/${name}.png" "tmp/${name}_ocr.pdf"
              pdftotext "tmp/${name}_ocr.pdf" "output/txt/${name}.txt" || true
              cp "tmp/${name}_ocr.pdf" "output/pdf/${name}.pdf"
            fi
          done

      - name: Merge PDFs (preserve order)
        run: |
          mkdir -p output/final
          qpdf --empty --pages output/pdf/*.pdf -- output/final/merged.pdf || echo "qpdf merge failed"

      - name: Merge TXT (sequence)
        run: |
          if ls output/txt/*.txt 1> /dev/null 2>&1; then
            cat output/txt/*.txt > output/final/merged.txt
          else
            echo "" > output/final/merged.txt
          fi

      - name: Show sample of merged text
        run: |
          echo "===== First 40 lines of merged.txt ====="
          head -n 40 output/final/merged.txt || true

      - name: Upload OCR results
        uses: actions/upload-artifact@v4
        with:
          name: ocr-results
          path: output/
