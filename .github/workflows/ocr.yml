name: OCR Batch (ocrmypdf + Tesseract, robust)

on:
  workflow_dispatch:

jobs:
  ocr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            tesseract-ocr tesseract-ocr-por \
            poppler-utils qpdf ghostscript imagemagick
          python3 -m pip install --upgrade pip
          python3 -m pip install ocrmypdf

      - name: Debug: versions & installed langs
        run: |
          echo "=== tesseract version ==="
          tesseract --version
          echo "=== installed tesseract langs ==="
          tesseract --list-langs || true
          echo "=== ocrmypdf version ==="
          ocrmypdf --version || true

      - name: Run OCR (PDFs + images)
        run: |
          mkdir -p tmp output/pdf output/txt output/final
          # process in lexicographic order (use numeric prefixes pra garantir sequÃªncia)
          for f in input/*; do
            [ -f "$f" ] || continue
            base=$(basename "$f")
            name="${base%.*}"
            echo ">>> Processing: $base"

            # PDF input
            if [[ "${f,,}" == *.pdf ]]; then
              echo " - PDF detected: running ocrmypdf"
              ocrmypdf --force-ocr --deskew --rotate-pages --image-dpi 300 -l por "$f" "tmp/${name}_ocr.pdf"
              pdftotext "tmp/${name}_ocr.pdf" "output/txt/${name}.txt" || echo "pdftotext failed for ${name}"
              cp "tmp/${name}_ocr.pdf" "output/pdf/${name}.pdf"

            # Image input (jpg/png/tiff etc)
            else
              echo " - Image detected: converting to PDF + ocrmypdf"
              # converte imagem para PDF com 300 DPI
              magick -density 300 "$f" "tmp/${name}.pdf"
              ocrmypdf --force-ocr --deskew --rotate-pages --image-dpi 300 -l por "tmp/${name}.pdf" "tmp/${name}_ocr.pdf"
              pdftotext "tmp/${name}_ocr.pdf" "output/txt/${name}.txt" || echo "pdftotext failed for ${name}"
              cp "tmp/${name}_ocr.pdf" "output/pdf/${name}.pdf"
            fi
          done

      - name: Merge PDFs (preserve order by filename)
        run: |
          mkdir -p output/final
          qpdf --empty --pages output/pdf/*.pdf -- output/final/merged.pdf || echo "qpdf merge failed"

      - name: Merge TXT (sequence by filename)
        run: |
          # se nao houver txt, cria arquivo vazio
          if ls output/txt/*.txt 1> /dev/null 2>&1; then
            cat output/txt/*.txt > output/final/merged.txt
          else
            echo "" > output/final/merged.txt
          fi

      - name: Show sample of merged text (first 40 lines)
        run: |
          echo "===== merged.txt head ====="
          head -n 40 output/final/merged.txt || true

      - name: Upload OCR results
        uses: actions/upload-artifact@v4
        with:
          name: ocr-results
          path: output/
